

.. _sphx_glr_gallery_user_interfaces_wxcursor_demo_sgskip.py:


=============
WXcursor Demo
=============

Example to draw a cursor and report the data coords in wx



.. code-block:: python


    import matplotlib
    matplotlib.use('WXAgg')

    from matplotlib.backends.backend_wxagg import FigureCanvasWxAgg as FigureCanvas
    from matplotlib.backends.backend_wx import NavigationToolbar2Wx, wxc
    from matplotlib.figure import Figure
    from numpy import arange, sin, pi

    import wx


    class CanvasFrame(wx.Frame):
        def __init__(self, ):
            wx.Frame.__init__(self, None, -1,
                              'CanvasFrame', size=(550, 350))

            self.SetBackgroundColour(wxc.NamedColour("WHITE"))

            self.figure = Figure()
            self.axes = self.figure.add_subplot(111)
            t = arange(0.0, 3.0, 0.01)
            s = sin(2*pi*t)

            self.axes.plot(t, s)
            self.axes.set_xlabel('t')
            self.axes.set_ylabel('sin(t)')
            self.figure_canvas = FigureCanvas(self, -1, self.figure)

            # Note that event is a MplEvent
            self.figure_canvas.mpl_connect('motion_notify_event', self.UpdateStatusBar)
            self.figure_canvas.Bind(wx.EVT_ENTER_WINDOW, self.ChangeCursor)

            self.sizer = wx.BoxSizer(wx.VERTICAL)
            self.sizer.Add(self.figure_canvas, 1, wx.LEFT | wx.TOP | wx.GROW)
            self.SetSizer(self.sizer)
            self.Fit()

            self.statusBar = wx.StatusBar(self, -1)
            self.SetStatusBar(self.statusBar)

            self.toolbar = NavigationToolbar2Wx(self.figure_canvas)
            self.sizer.Add(self.toolbar, 0, wx.LEFT | wx.EXPAND)
            self.toolbar.Show()

        def ChangeCursor(self, event):
            self.figure_canvas.SetCursor(wxc.StockCursor(wx.CURSOR_BULLSEYE))

        def UpdateStatusBar(self, event):
            if event.inaxes:
                x, y = event.xdata, event.ydata
                self.statusBar.SetStatusText(("x= " + str(x) +
                                              "  y=" + str(y)),
                                             0)


    class App(wx.App):
        def OnInit(self):
            'Create the main window and insert the custom frame'
            frame = CanvasFrame()
            self.SetTopWindow(frame)
            frame.Show(True)
            return True

    if __name__ == '__main__':
        app = App(0)
        app.MainLoop()



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: wxcursor_demo_sgskip.py <wxcursor_demo_sgskip.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: wxcursor_demo_sgskip.ipynb <wxcursor_demo_sgskip.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
